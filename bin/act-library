#!/usr/bin/env node

const debug = require('debug')('ara-contracts:cli:library')
const { info, warn, error, log } = require('ara-console')
const { createProgram } = require('../lib/program')
const library = require('../library')
const inquirer = require('inquirer')

const toLower = x => String(x).toLowerCase()

// yargs program command line interface instance
const program = createProgram({
  usage: `
usage: act library: [-h] [--help]
                     <did> [options]
`
})

const { argv } = program
  .command('$0 <did>', 'Gets a list of content DIDs purchased by <did>', () => {
    program
      .positional('did', {
        type: 'string',
        describe: 'The library owner\'s DID'
      })
  }, onall)
  .command('get <did> <index>', 'Gets the content DID at <index> in <did>\'s library', () => {
    program
      .positional('did', {
        type: 'string',
        describe: 'The library owner\'s DID'
      })
      .positional('index', {
        type: 'number',
        describe: 'The position in the library'
      })
  }, onget)
  .command('get-copies <owner> <did>', 'Gets the number of copies of an AFS a purchaser owns', () => {
    program
      .positional('owner', {
        type: 'string',
        describe: 'The AFS owner\'s DID'
      })
      .positional('did', {
        type: 'string',
        describe: 'The AFS DID'
      })
  }, oncopies)

// Emit program usage help
if (0 == argv._.length && argv.help) {
  program.showHelp()
  process.exit(0)
}

// Main program entry
module.exports = (async function main() {
  if (argv.debug) {
    require('debug').enable('ara-contracts*')
  }
}())

async function onall(argv) {
  const { did } = argv
  try {
    info(`Getting ${did}\'s library...`)
    const size = await library.getLibrarySize(did)
    const lib = await library.getLibrary(did)
    info(`${did} library (${size})\n${lib}.`)
  } catch (err) {
    onfatal(err)
  }
}

async function onget(argv) {
  const { did, index } = argv
  try {
    info(`Getting item ${index} in ${did}\'s library...`)
    const contentDid = await library.getLibraryItem({ requesterDid: did, index })
    info(`item ${index} has did: ${contentDid}.`)
  } catch (err) {
    onfatal(err)
  }
}

async function oncopies(argv) {
  const { owner, did } = argv

  try {
    info(`Getting number of copies of ${did} owned by ${owner}...`)
    const copies = await library.getNumberCopiesOwned({ purchaserDid: owner, contentDid: did })
    info(`${owner} owns ${copies} copies of ${did}.`)
  } catch (err) {
    onfatal(err)
  }
}
