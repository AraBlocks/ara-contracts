#!/usr/bin/env node

const debug = require('debug')('ara-contracts:cli:withdraw')
const { info, warn, error, log } = require('ara-console')
const { createProgram } = require('../lib/program')
const { modifyDeposit } = require('../token')
const inquirer = require('inquirer')

// yargs program command line interface instance
const program = createProgram({
  usage: `
usage: act withdraw: [-h] [--help] [options] [--] <did> <amount>
`
})

// Parse program arguments based on yargs spec
const { argv } = program
  .command('$0 <did> <amount>', 'Withdraw Ara from deposit', () => { 
    program
      .positional('did', {
        type: 'string',
        describe: 'DID of the withdrawer'
      })
      .positional('amount', {
        type: 'string',
        describe: 'The number of Ara tokens to withdraw'
      })
    })

// Emit program usage help
if (0 == argv._.length && argv.help) {
  program.showHelp()
  process.exit(0)
}

// Main program entry
module.exports = (async function main() {
  if (argv.debug) {
    require('debug').enable('ara-contracts*')
  }
  const { did, amount } = argv
  const { password } = await promptForPassword()

  try {
    const opts = { did, password, val: amount, withdraw: true }
    info(`Withdrawing ${amount} Ara from deposit...`)
    const receipt = await modifyDeposit(opts)
    if (receipt.status) {
      info(`${did} withdrew ${amount} Ara from deposit.`)
    }
  } catch (err) {
    onfatal(err)
  }
}())

async function promptForPassword() {
  return await inquirer.prompt([{
    type: 'password',
    name: 'password',
    message:
    'Please provide the passphrase for your identity. This is needed to ' +
    'complete this action.\n' +
    'Passphrase:'
  }]) 
}

function onfatal(err) {
  if (err) {
    debug(err)
    error('fatal:', err.message)
  }
  process.exit(1)
}
